service: backend-auth

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    TABLE_NAME: ${self:custom.tableName}
    TOKEN_KEY: 'auth123'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"

custom:
  tableName: 'users-auth'
  bucketName: 'users-auth-serverless-20230504'

functions:
  users_authentication:
    handler: lambdas/users.authHandler
    events:
      - http:
          path: 'login'
          method: POST
          cors: true
      - http:
          path: 'register'
          method: POST
          cors: true

resources:
  Resources:
    myDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    staticSite:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
        OwnershipControls:
          Rules:
            - ObjectOwnership: ObjectWriter
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
    staticSiteBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: staticSite
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: '*'
              Action:
                - s3:GetObject
              Resource: "arn:aws:s3:::${self:custom.bucketName}/*"
          
    
        

        


